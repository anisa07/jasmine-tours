---
import LanguageSwitcher from "../LanguageSwitcher.astro";
import MobileMenu from "./MobileMenu.astro";
import NavBar from "./NavBar.astro";
import type { Locale } from "@/i18n/config";

// Import types from NavBar to avoid duplication
import type { NavItem } from "./NavBar.astro";
import LogoSvg from "../LogoSvg.astro";

export interface Props {
  fixed?: boolean;
  transparent?: boolean;
  navItems?: NavItem[];
  logoText?: string;
  logoHref?: string;
  logoImage?: string;
  logoAlt?: string;
  showMobileMenu?: boolean;
  showLanguageSwitcher?: boolean;
  currentLocale?: Locale;
  class?: string;
}

const {
  fixed = false,
  transparent = false,
  navItems = [],
  logoText,
  logoHref = "/",
  logoImage,
  logoAlt = "Logo",
  showMobileMenu = true,
  showLanguageSwitcher = false,
  currentLocale,
  class: className = "",
} = Astro.props;

const headerClasses = [
  "w-full bg-background/65 backdrop-blur-sm",
  fixed ? "fixed top-0 left-0 right-0 z-50" : "",
  className,
]
  .filter(Boolean)
  .join(" ");
---

<header class={headerClasses} id="main-header">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-20">
      <!-- Navigation using NavBar component -->
      <NavBar
        items={navItems}
        logo={logoImage}
        logoHref={logoHref}
        logoAlt={logoAlt || logoText}
        class="w-full p-0 border-0"
      >
        <span slot="logo">
          <LogoSvg />
        </span>
        {
          showLanguageSwitcher && currentLocale && (
            <div slot="actions">
              <div class="flex items-stretch gap-2">
                <div class="hidden sm:flex h-10 flex-shrink-0">
                  <LanguageSwitcher
                    currentLocale={currentLocale}
                    className="w-full h-full"
                  />
                </div>
              </div>
              <slot name="actions" />
            </div>
          )
        }
      </NavBar>

      <!-- Mobile Menu -->
      <div class="md:hidden flex items-center space-x-2">
        {
          showMobileMenu && (
            <MobileMenu
              items={navItems.map((item) => ({
                label: item.label,
                href: item.href,
                icon: item.icon,
                active: item.active,
                disabled: item.disabled,
                children: item.dropdown?.map((dropdownItem) => ({
                  label: dropdownItem.label,
                  href: dropdownItem.href,
                  icon: dropdownItem.icon,
                  disabled: dropdownItem.disabled,
                })),
              }))}
              showLanguageSwitcher={showLanguageSwitcher}
              currentLocale={currentLocale}
            />
          )
        }
      </div>
    </div>
  </div>
</header>

<script>
  // Simple header background on scroll for static Astro sites
  function initHeader() {
    const header = document.getElementById("main-header");
    if (!header || !header.classList.contains("bg-transparent")) return;

    function handleScroll() {
      if (window.scrollY > 50) {
        header!.classList.remove("bg-transparent");
        header!.classList.add("bg-background", "border-b", "border-border");
      } else {
        header!.classList.add("bg-transparent");
        header!.classList.remove("bg-background", "border-b", "border-border");
      }
    }

    window.addEventListener("scroll", handleScroll);
  }

  // Initialize immediately - DOM is ready in Astro
  initHeader();
</script>

<style>
  /* Anti-jumping header styles */
  #main-header {
    /* Remove all transitions to prevent jumping */
    transition: none !important;
    transform: none !important;
    backface-visibility: hidden;
    will-change: auto;
  }

  /* Force stable navigation */
  #main-header nav,
  #main-header nav * {
    transform: none !important;
    transition: none !important;
    backface-visibility: hidden;
  }

  /* Prevent any interactive element jumping */
  #main-header button,
  #main-header a,
  #main-header [role="button"] {
    transition: none !important;
    transform: none !important;
  }

  #main-header button:hover,
  #main-header button:focus,
  #main-header a:hover,
  #main-header a:focus {
    transition: none !important;
    transform: none !important;
  }

  /* Static mobile menu - no transitions */
  [data-mobile-menu="true"] {
    transition: none !important;
    transform: none !important;
  }

  /* Stable container */
  .container {
    transform: none !important;
    contain: layout;
  }

  /* Remove scroll behavior transitions */
  #main-header.bg-transparent {
    transition: none !important;
  }

  #main-header.bg-background {
    transition: none !important;
  }
</style>
