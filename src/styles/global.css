@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base styles */
@layer base {
  /* Simplified color system based on primary brand color + neutrals */
  :root {
    /* ===== BRAND COLOR SCALE (Internal) ===== */
    /* Lightest to darkest variations - base color: rgb(180 60 30) */
    --color-coral-50: 255 245 242; /* Very light tint - backgrounds */
    --color-coral-100: 255 230 223; /* Light tint - subtle highlights */
    --color-coral-200: 255 204 193; /* Lighter shade - hover backgrounds */
    --color-coral-300: 255 159 137; /* Medium-light - borders, accents */
    --color-coral-400: 230 100 70; /* Medium - warnings */
    --color-coral-500: 180 60 30; /* Base brand color (AA compliant) */
    --color-coral-600: 150 50 25; /* Dark - hover states, errors */
    --color-coral-700: 120 40 20; /* Darker - pressed states, success */
    --color-coral-800: 90 30 15; /* Very dark - gradients */

    /* ===== NEUTRAL COLOR SCALE ===== */
    /* Grayscale from white to black */
    --color-neutral-50: 250 250 250; /* Off-white - subtle backgrounds */
    --color-neutral-100: 245 245 245; /* Light gray - cards, surfaces */
    --color-neutral-200: 229 229 229; /* Lighter gray - borders */
    --color-neutral-300: 212 212 212; /* Medium-light gray - disabled foreground */
    --color-neutral-400: 163 163 163; /* Medium gray - disabled states */
    --color-neutral-500: 115 115 115; /* Mid gray - secondary text (AA on white) */
    --color-neutral-800: 38 38 38; /* Very dark gray - body text (AA on white) */

    /* ===== PRIMARY COLOR MAPPINGS (Public API) ===== */
    /* Use these semantic names in your components, not the internal scale above */
    --color-primary-50: var(--color-coral-50); /* Very light tint */
    --color-primary-100: var(--color-coral-100); /* Light tint */
    --color-primary-200: var(--color-coral-200); /* Lighter shade */
    --color-primary-300: var(--color-coral-300); /* Medium-light */
    --color-primary-400: var(--color-coral-400); /* Medium - warnings */
    --color-primary: 180 60 30; /* Base brand color */
    --color-primary-600: var(--color-coral-600); /* Dark - hover/errors */
    --color-primary-700: var(--color-coral-700); /* Darker - pressed/success */
    --color-primary-800: var(--color-coral-800); /* Very dark - gradients */
    --color-primary-hover: 150 50 25; /* Darker for hover states */
    --color-primary-pressed: 120 40 20; /* Even darker for pressed state */
    --color-primary-foreground: 255 255 255; /* White text on primary */

    /* ===== BACKGROUND & FOREGROUND ===== */
    --color-background: 255 255 255; /* White background */
    --color-foreground: 38 38 38; /* Dark gray text (AA compliant) */

    /* ===== SURFACE VARIATIONS ===== */
    --color-surface-1: 250 250 250; /* Subtle background - cards */
    --color-surface-2: 245 245 245; /* Elevated surface - dropdowns */
    --color-surface-3: 229 229 229; /* Modal/overlay background */

    /* ===== INTERACTIVE STATE COLORS ===== */
    --color-hover: 255 230 223; /* Light tint for hover backgrounds */
    --color-pressed: 255 204 193; /* Slightly darker for pressed */
    --color-focus: 180 60 30; /* Primary color for focus rings */
    --color-border: 229 229 229; /* Light gray borders */
    --color-input: 245 245 245; /* Light gray input backgrounds */

    /* ===== SEMANTIC COLORS (Primary-based) ===== */
    --color-success: 120 40 20; /* Dark variation for success */
    --color-success-foreground: 255 255 255;
    --color-warning: 230 100 70; /* Medium shade for warnings */
    --color-warning-foreground: 255 255 255;
    --color-error: 150 50 25; /* Dark shade for errors */
    --color-error-foreground: 255 255 255;
    --color-info: 180 60 30; /* Base primary for info */
    --color-info-foreground: 255 255 255;

    /* ===== DISABLED STATES ===== */
    --color-disabled: 163 163 163; /* Medium gray */
    --color-disabled-foreground: 212 212 212; /* Light gray text */

    /* ===== MUTED ELEMENTS ===== */
    --color-muted: 245 245 245; /* Light gray background */
    --color-muted-foreground: 115 115 115; /* Mid gray text (AA on white) */

    /* ===== HSL VARIANTS (for shadcn/ui components) ===== */
    /* These use HSL format for compatibility with certain UI libraries */
    --background: 0 0% 100%; /* White */
    --foreground: 0 0% 15%; /* Dark gray */
    --card: 0 0% 100%; /* White */
    --card-foreground: 0 0% 15%; /* Dark gray */
    --popover: 0 0% 100%; /* White */
    --popover-foreground: 0 0% 15%; /* Dark gray */
    --primary: 16 75% 41%; /* Primary in HSL */
    --primary-foreground: 0 0% 100%; /* White */
    --secondary: 0 0% 96%; /* Very light gray */
    --secondary-foreground: 16 75% 41%; /* Primary text */
    --muted: 0 0% 96%; /* Light gray */
    --muted-foreground: 0 0% 45%; /* Mid gray */
    --accent: 16 100% 95%; /* Very light primary tint */
    --accent-foreground: 16 75% 41%; /* Primary */
    --destructive: 16 80% 34%; /* Dark shade for errors */
    --destructive-foreground: 0 0% 98%; /* White */
    --border: 0 0% 90%; /* Light gray */
    --input: 0 0% 90%; /* Light gray */
    --ring: 16 75% 41%; /* Primary */
    --link: 16 75% 41%; /* Primary links */
    --link-hover: 16 80% 34%; /* Darker primary on hover */
    --badge-bg: 16 100% 95%; /* Light primary background */
    --badge-text: 16 75% 41%; /* Primary text */
    --radius: 0.5rem;
  }

  /* Base HTML elements */
  html {
    scroll-behavior: smooth;
  }

  body {
    background-color: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
  }

  /* Headings */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 600;
    letter-spacing: -0.025em;
  }

  h1 {
    font-size: 2.25rem; /* 36px */
    line-height: 2.5rem; /* 40px */
  }

  @media (min-width: 1024px) {
    h1 {
      font-size: 3rem; /* 48px */
      line-height: 1;
    }
  }

  h2 {
    font-size: 1.875rem; /* 30px */
    line-height: 2.25rem; /* 36px */
  }

  @media (min-width: 1024px) {
    h2 {
      font-size: 2.25rem; /* 36px */
      line-height: 2.5rem; /* 40px */
    }
  }

  h3 {
    font-size: 1.5rem; /* 24px */
    line-height: 2rem; /* 32px */
  }

  @media (min-width: 1024px) {
    h3 {
      font-size: 1.875rem; /* 30px */
      line-height: 2.25rem; /* 36px */
    }
  }

  h4 {
    font-size: 1.25rem; /* 20px */
    line-height: 1.75rem; /* 28px */
  }

  @media (min-width: 1024px) {
    h4 {
      font-size: 1.5rem; /* 24px */
      line-height: 2rem; /* 32px */
    }
  }

  h5 {
    font-size: 1.125rem; /* 18px */
    line-height: 1.75rem; /* 28px */
  }

  @media (min-width: 1024px) {
    h5 {
      font-size: 1.25rem; /* 20px */
      line-height: 1.75rem; /* 28px */
    }
  }

  h6 {
    font-size: 1rem; /* 16px */
    line-height: 1.5rem; /* 24px */
  }

  @media (min-width: 1024px) {
    h6 {
      font-size: 1.125rem; /* 18px */
      line-height: 1.75rem; /* 28px */
    }
  }

  /* Paragraphs */
  p {
    line-height: 1.75rem; /* 28px */
  }

  /* Links */
  a {
    color: rgb(var(--color-primary));
    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  a:hover {
    color: rgb(var(--color-primary));
    opacity: 0.8;
  }

  /* Selection */
  ::selection {
    background-color: rgb(var(--color-primary));
    color: rgb(var(--color-primary-foreground));
  }
}

/* Component styles */
@layer components {
  /* Button variants */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.375rem; /* 6px */
    font-size: 0.875rem; /* 14px */
    line-height: 1.25rem; /* 20px */
    font-weight: 500;
    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .btn:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgb(var(--color-ring));
  }

  .btn:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  .btn-primary {
    background-color: rgb(var(--color-primary));
    color: rgb(var(--color-primary-foreground));
  }

  .btn-primary:hover {
    background-color: rgb(var(--color-primary));
    opacity: 0.9;
  }

  .btn-secondary {
    background-color: rgb(var(--color-muted));
    color: rgb(var(--color-foreground));
  }

  .btn-secondary:hover {
    background-color: rgb(var(--color-muted));
    opacity: 0.8;
  }

  .btn-outline {
    border: 1px solid rgb(var(--color-border));
    background-color: transparent;
    color: rgb(var(--color-foreground));
  }

  .btn-outline:hover {
    background-color: rgb(var(--color-muted));
  }

  .btn-ghost {
    color: rgb(var(--color-foreground));
  }

  .btn-ghost:hover {
    background-color: rgb(var(--color-muted));
  }

  /* Button sizes */
  .btn-sm {
    height: 2rem; /* 32px */
    padding-left: 0.75rem; /* 12px */
    padding-right: 0.75rem; /* 12px */
    font-size: 0.75rem; /* 12px */
    line-height: 1rem; /* 16px */
  }

  .btn-md {
    height: 2.5rem; /* 40px */
    padding-left: 1rem; /* 16px */
    padding-right: 1rem; /* 16px */
    padding-top: 0.5rem; /* 8px */
    padding-bottom: 0.5rem; /* 8px */
  }

  /* Card component */
  .card {
    border-radius: 0.5rem; /* 8px */
    border: 1px solid rgb(var(--color-border));
    background-color: rgb(var(--color-background));
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  }

  /* Input component */
  .input {
    display: flex;
    height: 2.5rem; /* 40px */
    width: 100%;
    border-radius: 0.375rem; /* 6px */
    border: 1px solid rgb(var(--color-border));
    background-color: rgb(var(--color-input));
    padding-left: 0.75rem; /* 12px */
    padding-right: 0.75rem; /* 12px */
    padding-top: 0.5rem; /* 8px */
    padding-bottom: 0.5rem; /* 8px */
    font-size: 0.875rem; /* 14px */
    line-height: 1.25rem; /* 20px */
    color: rgb(var(--color-foreground));
  }

  .input::file-selector-button {
    border: 0;
    background-color: transparent;
    font-size: 0.875rem; /* 14px */
    line-height: 1.25rem; /* 20px */
    font-weight: 500;
  }

  .input::placeholder {
    color: rgb(var(--color-muted-foreground));
  }

  .input:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgb(var(--color-ring));
  }

  .input:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  .textarea {
    display: flex;
    min-height: 5rem; /* 80px - taller than input for multi-line text */
    width: 100%;
    border-radius: 0.375rem; /* 6px */
    border: 1px solid rgb(var(--color-border));
    background-color: rgb(var(--color-input));
    padding-left: 0.75rem; /* 12px */
    padding-right: 0.75rem; /* 12px */
    padding-top: 0.5rem; /* 8px */
    padding-bottom: 0.5rem; /* 8px */
    font-size: 0.875rem; /* 14px */
    line-height: 1.25rem; /* 20px */
    color: rgb(var(--color-foreground));
    resize: vertical; /* Allow vertical resizing only */
  }

  .textarea::placeholder {
    color: rgb(var(--color-muted-foreground));
  }

  .textarea:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px rgb(var(--color-ring));
  }

  .textarea:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  /* Badge component */
  .badge {
    display: inline-flex;
    align-items: center;
    border-radius: 9999px;
    padding-left: 0.625rem; /* 10px */
    padding-right: 0.625rem; /* 10px */
    padding-top: 0.125rem; /* 2px */
    padding-bottom: 0.125rem; /* 2px */
    font-size: 0.75rem; /* 12px */
    line-height: 1rem; /* 16px */
    font-weight: 600;
    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .badge:focus {
    outline: none;
    box-shadow:
      0 0 0 2px rgb(var(--color-ring)),
      0 0 0 4px rgb(var(--color-ring) / 0.2);
  }
}

/* Utility styles */
@layer utilities {
  .text-muted {
    color: rgb(var(--color-muted-foreground));
  }

  .text-foreground {
    color: rgb(var(--color-foreground));
  }

  .text-primary {
    color: rgb(var(--color-primary));
  }

  /* Background utilities */
  .bg-background {
    background-color: rgb(var(--color-background));
  }

  .bg-muted {
    background-color: rgb(var(--color-muted));
  }

  .bg-primary {
    background-color: rgb(var(--color-primary));
  }

  /* Border utilities */
  .border-border {
    border-color: rgb(var(--color-border));
  }

  /* Animation utilities */
  .animate-in {
    animation: fade-in 0.5s ease-out;
  }

  /* Combined interactive class for buttons and clickable elements */
  .interactive {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .interactive:hover:not(:disabled) {
    background-color: rgb(var(--color-hover));
  }

  .interactive:active:not(:disabled) {
    background-color: rgb(var(--color-pressed));
    transform: scale(0.98);
  }

  .interactive:focus-visible {
    outline: 2px solid rgb(var(--color-focus));
    outline-offset: 2px;
  }

  .interactive:disabled {
    background-color: rgb(var(--color-disabled));
    color: rgb(var(--color-disabled-foreground));
    cursor: not-allowed;
    opacity: 0.6;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/* Prose typography styles */
@layer utilities {
  .prose {
    /* Better typography for reading */
    --tw-prose-body: hsl(var(--muted-foreground));
    --tw-prose-headings: hsl(var(--foreground));
    --tw-prose-links: hsl(var(--primary));
    --tw-prose-bold: hsl(var(--foreground));
    --tw-prose-counters: hsl(var(--muted-foreground));
    --tw-prose-bullets: hsl(var(--border));
    --tw-prose-hr: hsl(var(--border));
    --tw-prose-quotes: hsl(var(--foreground));
    --tw-prose-quote-borders: hsl(var(--border));
    --tw-prose-captions: hsl(var(--muted-foreground));
    --tw-prose-code: hsl(var(--foreground));
    --tw-prose-pre-code: hsl(var(--muted-foreground));
    --tw-prose-pre-bg: hsl(var(--muted));
    --tw-prose-th-borders: hsl(var(--border));
    --tw-prose-td-borders: hsl(var(--border));
  }

  /* Dark mode prose */
  .dark .prose {
    --tw-prose-body: hsl(var(--muted-foreground));
    --tw-prose-headings: hsl(var(--foreground));
    --tw-prose-links: hsl(var(--primary));
    --tw-prose-bold: hsl(var(--foreground));
    --tw-prose-counters: hsl(var(--muted-foreground));
    --tw-prose-bullets: hsl(var(--border));
    --tw-prose-hr: hsl(var(--border));
    --tw-prose-quotes: hsl(var(--foreground));
    --tw-prose-quote-borders: hsl(var(--border));
    --tw-prose-captions: hsl(var(--muted-foreground));
    --tw-prose-code: hsl(var(--foreground));
    --tw-prose-pre-code: hsl(var(--muted-foreground));
    --tw-prose-pre-bg: hsl(var(--muted));
    --tw-prose-th-borders: hsl(var(--border));
    --tw-prose-td-borders: hsl(var(--border));
  }
}
